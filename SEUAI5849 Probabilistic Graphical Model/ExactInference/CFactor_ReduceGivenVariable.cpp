/////////////////////////////////////////////////////////////////////////////////////////////
//文件名：		CFactor_ReduceGivenVariable.cpp
//功  能：		根据给定的变量和值，化简因子。用于计算条件概率分布
//开发者：		高志强
//日  期：		2021年03月13日
//更  新：		2021年03月14日
//更  新：		2021年03月23日
//更  新：		2021年03月29日
//长  度：		50行
/////////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"									//MFC标准头文件
#include "CFactor.h"								//因子类头文件
#include "Helper.h"									//辅助函数头文件


//名  称：		ReduceGivenVariable()
//功  能：		根据给定的变量ID和值ID，化简因子
//参  数：		unsigned int,unsigned int
//返回值：		无
void CFactor::ReduceGivenVariable(unsigned int nVariableID, unsigned int nValueID)
{	
	//////////////////////////////////////////
	//函数3：因子化简。需要同学完成
	// 开始时间：21-5-27 09:10
	// 完成时间：21-5-27 11:50
	// 完成者：58119125蒋卓洋
	//////////////////////////////////////////
	// 分析：通过观察查询步骤，了解到因子化简的操作目的为：
	// 	   查询的概率中给定变量（GivenVariable）都有具体的变量值，因此在计算时，若因子与这些给定变量（GivenVariable）相关，只会用到这些具体的变量值，
	// 因此可以将所有子与这些给定变量（GivenVariable）相关的因子化简（删去其中给定变量（GivenVariable）取值和我们已知的给定变量（GivenVariable）具体值不同的行）
	// 	   步骤大致如下：
	// 	   1.每次处理一个给定变量
	// 	   2.对一个因子进行处理，遍历该因子的变量ID，若无该给定变量的ID则返回。
	// 	   3.若有该给定变量的ID，则遍历该因子的所有因子行。
	// 	   4.若因子行的给定变量与已知给定变量的取值不同，则删去该因子行
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//1.遍历因子的变量ID进行判断：
	//	1.1若无该给定变量的ID则判断为不存在给定变量，返回，
	//	1.2若有则判断为存在给定变量，立刻记录给定变量在因子的变量ID数组中对应的下标（此下标也为因子行中该变量的下标）
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	bool Have_GivenVariable = FALSE;//定义判断变量，初始化为假，用于判断因子的变量中是否含有本次处理的给定变量
	unsigned int Index_GivenVariable;
	for (unsigned int i = 0; i < m_VariableIDs.size(); i++) {//遍历因子的变量ID数组
		if (m_VariableIDs[i] == nVariableID) {//若存在该变量ID，则判断为真，因子有给定变量
			Have_GivenVariable = TRUE;
			Index_GivenVariable = i;//获取给定变量的下标
		}
		else {//若此次无该变量ID，则判断保持
			continue;
		}
	}
	if (!Have_GivenVariable) {//若此因子无本次处理的给定变量，则函数直接返回
		return;
	}
	else {//若此因子有本次处理的给定变量，则进行处理
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//2.删去给定变量特定取值对应的因子行
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		vector<FACTOR_ROW>New_FactorRowList;//定义新的因子行列表
		for (unsigned int i = 0; i < m_FactorRows.size(); i++) {//遍历老的因子行列表
			if (m_FactorRows[i].ValueIDs[Index_GivenVariable] == nValueID) {//若因子行对应给定变量取值与已知给定变量取值相同，则拷贝到新的因子行列表
				New_FactorRowList.push_back(m_FactorRows[i]);
			}
		}
		m_FactorRows = New_FactorRowList;//将因子行列表更新为删去冗余因子行的列表
	}
	
}